package gals;

public interface ParserConstants
{
    int START_SYMBOL = 45;

    int FIRST_NON_TERMINAL    = 45;
    int FIRST_SEMANTIC_ACTION = 94;

    int[][] PARSER_TABLE =
    {
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,   0,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  65,  65,  65,  65,  -1,  -1,  -1,  -1,  -1,  65,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  65,  -1,  -1,  -1,  -1,  65,  65,  -1,  -1,  -1,  65,  -1,  -1,  -1,  -1,  -1,  -1,  65,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  69,  69,  69,  69,  -1,  -1,  -1,  -1,  -1,  71,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  70,  -1,  -1,  -1,  -1,  69,  69,  -1,  -1,  -1,  69,  -1,  -1,  -1,  -1,  -1,  -1,  72,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  73,  73,  73,  73,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  73,  73,  -1,  -1,  -1,  73,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  76,  -1,  -1,  -1,  -1,  -1,  77,  78,  79,  80,  81 },
        {  -1,  82,  82,  82,  82,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  82,  82,  -1,  -1,  -1,  82,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  86,  86,  86,  86,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  86,  86,  -1,  -1,  -1,  86,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  90,  91,  92,  93,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  95,  96,  -1,  -1,  -1,  94,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,   2,  -1,  -1,   2,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   1,   2,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,   3,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,   6,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,   7,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   7,  -1,   7,   7,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   7,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  10,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  11,  -1,  12,  12,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  13,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  20,  -1,  -1,  -1,  -1,  -1,  20,  -1,  -1,  -1,  -1,  20,  -1,  -1,  -1,  20,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  21,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  25,  -1,  -1,  -1,  -1,  -1,  23,  -1,  -1,  -1,  -1,  22,  -1,  -1,  -1,  24,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  26,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  27,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  30,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  36,  37,  38,  -1,  -1,  -1,  -1,  -1,  40,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  39,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  42,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  41,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  43,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  50,  -1,  -1,  -1,  49,  -1,  -1,  -1,  -1,  -1,  47,  -1,  -1,  -1,  -1,  46,  -1,  -1,  -1,  48,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  51,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  52,  53,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  54,  54,  54,  54,  -1,  -1,  -1,  -1,  -1,  54,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  54,  -1,  -1,  -1,  -1,  54,  54,  -1,  -1,  -1,  54,  -1,  -1,  -1,  -1,  -1,  -1,  54,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  64,  63,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  99,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 100,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 100,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  31,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  32,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,   4,  -1,  -1,  -1,  -1,   5,  -1,  -1,   5,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   5,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {   9,   8,  -1,  -1,  -1,  -1,  -1,  -1,   9,  -1,  -1,  -1,  -1,   9,  -1,   8,  -1,   8,   8,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   8,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  68,  68,  -1,  -1,  -1,  -1,  -1,  -1,  68,  -1,  -1,  -1,  -1,  68,  -1,  68,  -1,  68,  68,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  68,  68,  -1,  -1,  68,  66,  67,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  85,  85,  -1,  -1,  -1,  -1,  -1,  -1,  85,  -1,  -1,  -1,  -1,  85,  -1,  85,  -1,  85,  85,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  83,  84,  -1,  -1,  -1,  85,  85,  85,  -1,  85,  85,  85,  -1,  85,  85,  85,  85,  85 },
        {  89,  89,  -1,  -1,  -1,  -1,  -1,  -1,  89,  -1,  -1,  -1,  -1,  89,  -1,  89,  -1,  89,  89,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  89,  89,  87,  88,  -1,  89,  89,  89,  -1,  89,  89,  89,  -1,  89,  89,  89,  89,  89 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  15,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  14,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  18,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  19,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  59,  58,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  57,  57,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  62,  62,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  16,  16,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  17,  17,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  28,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  29,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  35,  -1,  35,  35,  -1,  34,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  44,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  45,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  56,  -1,  -1,  55,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  61,  -1,  -1,  -1,  -1,  60,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 },
        {  75,  75,  -1,  -1,  -1,  -1,  -1,  -1,  75,  -1,  -1,  -1,  -1,  75,  -1,  75,  -1,  75,  75,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  75,  75,  74,  -1,  75,  75,  75,  -1,  74,  74,  74,  74,  74 },
        {  98,  98,  -1,  -1,  -1,  -1,  -1,  -1,  98,  -1,  -1,  -1,  97,  98,  -1,  98,  -1,  98,  98,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  98,  98,  98,  98,  -1,  98,  98,  98,  -1,  98,  98,  98,  -1,  98,  98,  98,  98,  98 }
    };

    int[][] PRODUCTIONS = 
    {
        {  8, 53, 74, 66, 10, 56 },
        { 23, 54 },
        {  0 },
        { 55, 75 },
        { 54 },
        {  0 },
        {  2, 31, 58 },
        { 57, 76 },
        { 56 },
        {  0 },
        {  2, 80 },
        { 69 },
        { 70 },
        { 32, 46, 33, 86 },
        { 81 },
        { 82 },
        { 84 },
        { 85 },
        { 35, 46 },
        { 20, 32,  2, 36, 46, 33 },
        { 59 },
        { 60 },
        { 17 },
        { 12 },
        { 21 },
        {  6 },
        { 32, 61, 33 },
        { 62, 87 },
        { 61 },
        {  0 },
        {  2, 31, 59 },
        {  7, 64, 34, 65, 73 },
        {  0 },
        {  2, 88 },
        { 36, 64 },
        {  0 },
        {  3 },
        {  4 },
        {  5 },
        { 22 },
        { 11 },
        { 24, 67 },
        {  0 },
        { 64, 31, 68, 89 },
        { 67 },
        {  0 },
        { 17 },
        { 12 },
        { 21 },
        {  6 },
        {  2 },
        { 16, 32, 64, 33 },
        { 18, 32, 71, 33 },
        { 19, 32, 71, 33 },
        { 46, 90 },
        { 36, 71 },
        {  0 },
        { 83 },
        { 15, 31, 56, 91,  9 },
        { 14, 31, 56,  9 },
        { 14, 31, 56 },
        {  0 },
        { 72, 31, 56,  9 },
        { 26 },
        { 25 },
        { 47, 77 },
        { 37, 47, 77 },
        { 38, 47, 77 },
        {  0 },
        { 48 },
        { 22 },
        { 11 },
        { 39, 47 },
        { 50, 92 },
        { 49, 50 },
        {  0 },
        { 34 },
        { 40 },
        { 41 },
        { 42 },
        { 43 },
        { 44 },
        { 51, 78 },
        { 27, 51, 78 },
        { 28, 51, 78 },
        {  0 },
        { 52, 79 },
        { 29, 52, 79 },
        { 30, 52, 79 },
        {  0 },
        {  2, 93 },
        {  3 },
        {  4 },
        {  5 },
        { 32, 46, 33 },
        { 27, 52 },
        { 28, 52 },
        { 13, 32,  2, 33 },
        {  0 },
        { 64, 34, 65, 73 },
        {  0 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "Esperado fim de programa",
        "Esperado identificador",
        "Esperado constante inteira",
        "Esperado constante real",
        "Esperado constante caracter",
        "Esperado bool",
        "Esperado consts",
        "Esperado def",
        "Esperado end",
        "Esperado execute",
        "Esperado false",
        "Esperado float",
        "Esperado get",
        "Esperado ifFalse",
        "Esperado ifTrue",
        "Esperado input",
        "Esperado int",
        "Esperado print",
        "Esperado println",
        "Esperado set",
        "Esperado str",
        "Esperado true",
        "Esperado types",
        "Esperado var",
        "Esperado whileFalse",
        "Esperado whileTrue",
        "Esperado \"+\"",
        "Esperado \"-\"",
        "Esperado \"*\"",
        "Esperado \"/\"",
        "Esperado \":\"",
        "Esperado \"(\"",
        "Esperado \")\"",
        "Esperado \"=\"",
        "Esperado \":=\"",
        "Esperado \",\"",
        "Esperado \"&&\"",
        "Esperado \"||\"",
        "Esperado \"!\"",
        "Esperado \"!=\"",
        "Esperado \"<\"",
        "Esperado \"<=\"",
        "Esperado \">\"",
        "Esperado \">=\"",
        "<PROGRAMA> inválido",
        "<EXPRESSAO> inválido",
        "<ELEMENTO> inválido",
        "<RELACIONAL> inválido",
        "<OPERADOR_RELACIONAL> inválido",
        "<ARITMETICA> inválido",
        "<TERMO> inválido",
        "<FATOR> inválido",
        "<DEFINICAO_DE_TIPOS> inválido",
        "<TIPOS> inválido",
        "<DEF_TIPO> inválido",
        "<LISTA_DE_COMANDOS> inválido",
        "<COMANDO> inválido",
        "<TIPO> inválido",
        "<SIMPLES> inválido",
        "<COMPOSTO> inválido",
        "<LISTA_DE_CAMPOS> inválido",
        "<CAMPO> inválido",
        "<CONSTANTE> inválido",
        "<LISTA_DE_IDENTIFICADORES> inválido",
        "<VALOR> inválido",
        "<DECLARACAO_DE_VARIAVEIS> inválido",
        "<DEC_VAR> inválido",
        "<TIPO_VAR> inválido",
        "<ENTRADA_DADOS> inválido",
        "<SAIDA_DADOS> inválido",
        "<LISTA_DE_EXPRESSOES> inválido",
        "<WHILE> inválido",
        "<REP_CONSTS> inválido",
        "<DEFINICAO_DE_CONSTANTES> inválido",
        "<TIPOS1> inválido",
        "<LISTA_DE_COMANDOS1> inválido",
        "<EXPRESSAO1> inválido",
        "<ARITMETICA1> inválido",
        "<TERMO1> inválido",
        "esperado set, :=",//"<COMANDO1> inválido",
        "<ATRIBUICAO1> inválido",
        "<MANIPULACAO_TIPOS_COMPOSTOS1> inválido",
        "<SELECAO1> inválido",
        "<SELECAO0> inválido",
        "<REPETICAO1> inválido",
        "<COMANDO2> inválido",
        "<LISTA_DE_CAMPOS1> inválido",
        "<LISTA_DE_IDENTIFICADORES1> inválido",
        "<DEC_VAR1> inválido",
        "<LISTA_DE_EXPRESSOES1> inválido",
        "<SELECAO2> inválido",
        "<RELACIONAL1> inválido",
        "<FATOR1> inválido"
    };
}
